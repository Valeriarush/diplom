name: Deploy to Production

on:
  push:
    branches: [main]

env:
  PROJECT_DIR: /var/www/cybapp/production
  DOCKER_IMAGE: cybapp-prod
  COMPOSE_FILE: docker-compose.yml

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE .

      - name: Save Docker image
        run: docker save -o $DOCKER_IMAGE.tar $DOCKER_IMAGE

      - name: Prepare server environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p $PROJECT_DIR
            cd $PROJECT_DIR
            docker compose -f $COMPOSE_FILE down || true

      - name: Transfer necessary files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            $DOCKER_IMAGE.tar
            $COMPOSE_FILE
            .env
            config.py
          target: $PROJECT_DIR

      - name: Deploy and start services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd $PROJECT_DIR
            docker load -i $DOCKER_IMAGE.tar
            docker compose -f $COMPOSE_FILE up -d --build --force-recreate
            docker exec $DOCKER_IMAGE python bot.py migrate || true
            docker image prune -f

      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker ps -a
            curl -sSf http://localhost:8000/health || docker compose logs
